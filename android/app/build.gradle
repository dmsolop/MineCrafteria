plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.test.mods"
    compileSdk 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.test.mods"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        buildConfig = true
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.android.material:material:1.12.0'

    implementation("com.cleveradssolutions:facebook:6.18.0.0")    // Meta Audience Network
    implementation("com.cleveradssolutions:bigo:4.9.1.0")         // Bigo
    implementation("com.cleveradssolutions:ironsource:8.4.0.0")   // IronSource
    // implementation("com.cleveradssolutions:madex:1.5.6.0")        // Madex

    implementation("com.cleveradssolutions:mintegral:16.8.81.0")  // Mintegral
    implementation("com.cleveradssolutions:google:23.5.0.0")      // Google Ads | Admob
    implementation("com.cleveradssolutions:fyber:8.3.3.0")        // DT Exchange
    implementation("com.cleveradssolutions:yandex:27.6.0.1")      // Yandex Ads

    implementation 'com.google.firebase:firebase-bom:32.7.3'      // Актуальна BOM-версія
    implementation 'com.google.firebase:firebase-analytics'       // Firebase Analytics (можна прибрати, якщо не потрібне)
    implementation 'com.google.firebase:firebase-config'          // Firebase Remote Config

    // implementation 'com.google.android.play:core:1.10.3'           // Play Core
}

apply plugin: 'com.google.gms.google-services'